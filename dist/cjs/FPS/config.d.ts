import Event from "../lib/event";
import { VALID_OBJECT } from "../lib/constant";
export declare const FPS_COUNTRY: {
    readonly CN: "cn";
    readonly GB: "gb";
    readonly HK: "hk";
    readonly MO: "mo";
    readonly TW: "tw";
    readonly US: "us";
};
export declare const FPS_CURRENCY: {
    readonly CNY: "156";
    readonly HKD: "344";
    readonly TWD: "901";
    readonly USD: "840";
};
export declare const FPS_LANGUAGE: {
    readonly EN: "en";
    readonly ZH: "zh";
};
export declare const FPS_MERCHANT = "26";
export declare const FPS_PARTICIPANT: {
    readonly "003": "STANDARD CHARTERED BANK (HONG KONG) LIMITED";
    readonly "004": "The Hongkong and Shanghai Banking Corporation Limited";
    readonly "009": "China Construction Bank (Asia) Corporation Limited";
    readonly "012": "Bank of China (Hong Kong) Limited";
    readonly "014": "Bank of China (Hong Kong) Limited";
    readonly "015": "The Bank of East Asia, Limited";
    readonly "016": "DBS Bank (Hong Kong) Ltd.";
    readonly "019": "Bank of China (Hong Kong) Limited";
    readonly "020": "CMB Wing Lung Bank Limited";
    readonly "024": "Hang Seng Bank Ltd.";
    readonly "025": "Shanghai Commercial Bank Limited";
    readonly "026": "Bank of China (Hong Kong) Limited";
    readonly "027": "Bank of Communications Co., Ltd. Hong Kong Branch";
    readonly "028": "Public Bank (Hong Kong) Limited";
    readonly "029": "INDUSTRIAL AND COMMERCIAL BANK OF CHINA (ASIA) LIMITED";
    readonly "030": "Bank of China (Hong Kong) Limited";
    readonly "031": "Bank of China (Hong Kong) Limited";
    readonly "033": "Bank of China (Hong Kong) Limited";
    readonly "035": "OCBC Wing Hang Bank Limited";
    readonly "036": "Bank of China (Hong Kong) Limited";
    readonly "038": "Tai Yau Bank Limited";
    readonly "039": "Chiyu Banking Corporation Limited";
    readonly "040": "Dah Sing Bank, Limited";
    readonly "041": "Chong Hing Bank Limited";
    readonly "043": "Nanyang Commercial Bank, Limited";
    readonly "044": "OCBC Wing Hang Bank Limited";
    readonly "061": "TAI SANG BANK LTD.";
    readonly "064": "Bank of China (Hong Kong) Limited";
    readonly "070": "Bank of China (Hong Kong) Limited";
    readonly "128": "Fubon Bank (Hong Kong) Limited";
    readonly "250": "Citibank (Hong Kong) Limited";
    readonly "929": "K & R INTERNATIONAL LIMITED";
    readonly "930": "EPAYLINKS TECHNOLOGY CO., LIMITED";
    readonly "931": "WeChat Pay Hong Kong Limited";
    readonly "933": "33 Financial Services Limited";
    readonly "934": "UniCard Solution Limited";
    readonly "935": "HKT Payment Limited";
    readonly "947": "TNG (Asia) Limited";
    readonly "948": "Alipay Financial Services (HK) Limited";
    readonly "949": "Octopus Cards Limited";
    readonly "952": "Autotoll Limited";
    readonly "954": "PayMe";
};
export declare type FPS_COUNTRY = keyof typeof FPS_COUNTRY;
export declare type FPS_CURRENCY = keyof typeof FPS_CURRENCY;
export declare type FPS_LANGUAGE = keyof typeof FPS_LANGUAGE;
export declare type FPS_MERCHANT = typeof FPS_MERCHANT;
export declare type FPS_PARTICIPANTS = keyof typeof FPS_PARTICIPANT;
export declare type MERCHANT_INFO = {
    language: FPS_LANGUAGE;
    merchantName: string;
    merchantCity?: string;
    extra?: VALID_OBJECT;
};
export interface IFPS_CODE {
    parse(x: string): Event;
    extract(x: string): Event;
    generate(): Event;
    isStatic(): boolean;
    setStatic(): Event;
    setDynamic(): Event;
    setMerchantAccount(x: VALID_OBJECT): Event;
    getBank(toName: boolean): Event;
    setBank(x: FPS_PARTICIPANTS): Event;
    getFPSId(): Event;
    setFPSId(x: number | string): Event;
    getMobile(): Event;
    setMobile(x: number | string): Event;
    getEmail(): Event;
    setEmail(x: string): Event;
    getAmount(toNumber: boolean): Event;
    setAmount(x: number): Event;
    setAdditionalInfo(x: VALID_OBJECT): Event;
    getBillNumber(): Event;
    setBillNumber(x: string): Event;
    getReference(): Event;
    setReference(x: string): Event;
    setHKD(): Event;
    setCNY(): Event;
    getCurrency(toCode: boolean): Event;
    setCurrency(x: FPS_CURRENCY): Event;
}
